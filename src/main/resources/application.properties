 spring.application.name=Banking-Portal
server.port=8089

#  SpringBoot
spring.main.lazy-initialization=true


logging.level.root=info
logging.level.org.springframework=debug
# HIBERNATE
logging.level.org.hibernate=INFO
logging.level.org.hibernate.sql=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE
logging.level.org.hibernate.stat=DEBUG
logging.level.org.hibernate.cache=debug
logging.level.org.hibernate.tool.schema=debug
logging.level.org.hibernate.SQL_SLOW=INFO
logging.level.org.hibernate.orm.jdbc.bind=trace
logging.level.org.springframework.security=DEBUG



# DataBase
#  ACTUATOR
# Database connection details
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=Admin
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate properties
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
security.jwt.token.secret-key=token1234$123214235354777578SIE
spring.liquibase.enabled=false
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.jpa.properties.hibernate.format_sql=true
secret.token.expiration-time=86400000  # 24 hours in milliseconds
spring.docker.compose.lifecycle-management=start_only

spring.threads.virtual.enabled=true

#
#spring.security.oauth2.client.registration.my-client.client-id=my-client
#spring.security.oauth2.client.registration.my-client.client-secret=hL1b2KiesC0DmwyHthDwnLpjxctqNDST
#spring.security.oauth2.client.registration.my-client.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.my-client.scope=openid
#spring.security.oauth2.client.registration.my-client.redirect-uri={baseUrl}/login/oauth2/code/my-client
##
##spring.security.oauth2.client.provider.my-client.issuer-uri=http://localhost:8080/realms/myuser
#
#spring.security.oauth2.client.provider.my-client.issuer-uri=http://localhost:8080/realms/my-realm

# disable flyway execution
spring.flyway.enabled=false

# If you have an existing database and start using Flyway for new database changes.

# To customize flyway migrations tracking table name
spring.flyway.table=db_migrations

# In case of any flyway execution errors, clean up the database and re-run all the migrations
## NEVER USE THIS IN PRODUCTION. ONLY SUITABLE FOR PROTOTYPING
spring.flyway.clean-disabled=false
spring.flyway.clean-on-validation-error=true